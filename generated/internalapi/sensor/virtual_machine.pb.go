// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: internalapi/sensor/virtual_machine.proto

package sensor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SourceType int32

const (
	SourceType_OS                SourceType = 0
	SourceType_PYTHON            SourceType = 1
	SourceType_JAVA              SourceType = 2
	SourceType_RUBY              SourceType = 3
	SourceType_NODEJS            SourceType = 4
	SourceType_GO                SourceType = 7
	SourceType_DOTNETCORERUNTIME SourceType = 5
	SourceType_INFRASTRUCTURE    SourceType = 6
)

// Enum value maps for SourceType.
var (
	SourceType_name = map[int32]string{
		0: "OS",
		1: "PYTHON",
		2: "JAVA",
		3: "RUBY",
		4: "NODEJS",
		7: "GO",
		5: "DOTNETCORERUNTIME",
		6: "INFRASTRUCTURE",
	}
	SourceType_value = map[string]int32{
		"OS":                0,
		"PYTHON":            1,
		"JAVA":              2,
		"RUBY":              3,
		"NODEJS":            4,
		"GO":                7,
		"DOTNETCORERUNTIME": 5,
		"INFRASTRUCTURE":    6,
	}
)

func (x SourceType) Enum() *SourceType {
	p := new(SourceType)
	*p = x
	return p
}

func (x SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_internalapi_sensor_virtual_machine_proto_enumTypes[0].Descriptor()
}

func (SourceType) Type() protoreflect.EnumType {
	return &file_internalapi_sensor_virtual_machine_proto_enumTypes[0]
}

func (x SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceType.Descriptor instead.
func (SourceType) EnumDescriptor() ([]byte, []int) {
	return file_internalapi_sensor_virtual_machine_proto_rawDescGZIP(), []int{0}
}

type VirtualMachine struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Id            string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Namespace     string                     `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name          string                     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ClusterId     string                     `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	ClusterName   string                     `protobuf:"bytes,5,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Facts         map[string]string          `protobuf:"bytes,6,rep,name=facts,proto3" json:"facts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Components    []*VirtualMachineComponent `protobuf:"bytes,7,rep,name=components,proto3" json:"components,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	mi := &file_internalapi_sensor_virtual_machine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_virtual_machine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachine.ProtoReflect.Descriptor instead.
func (*VirtualMachine) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_virtual_machine_proto_rawDescGZIP(), []int{0}
}

func (x *VirtualMachine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VirtualMachine) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VirtualMachine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VirtualMachine) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *VirtualMachine) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *VirtualMachine) GetFacts() map[string]string {
	if x != nil {
		return x.Facts
	}
	return nil
}

func (x *VirtualMachine) GetComponents() []*VirtualMachineComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

type License struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Url           string                 `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *License) Reset() {
	*x = License{}
	mi := &file_internalapi_sensor_virtual_machine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_virtual_machine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_virtual_machine_proto_rawDescGZIP(), []int{1}
}

func (x *License) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *License) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *License) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type VirtualMachineComponent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	License       *License               `protobuf:"bytes,3,opt,name=license,proto3" json:"license,omitempty"`
	Source        SourceType             `protobuf:"varint,4,opt,name=source,proto3,enum=sensor.SourceType" json:"source,omitempty"`
	Location      string                 `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Architecture  string                 `protobuf:"bytes,6,opt,name=architecture,proto3" json:"architecture,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VirtualMachineComponent) Reset() {
	*x = VirtualMachineComponent{}
	mi := &file_internalapi_sensor_virtual_machine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineComponent) ProtoMessage() {}

func (x *VirtualMachineComponent) ProtoReflect() protoreflect.Message {
	mi := &file_internalapi_sensor_virtual_machine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VirtualMachineComponent.ProtoReflect.Descriptor instead.
func (*VirtualMachineComponent) Descriptor() ([]byte, []int) {
	return file_internalapi_sensor_virtual_machine_proto_rawDescGZIP(), []int{2}
}

func (x *VirtualMachineComponent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VirtualMachineComponent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VirtualMachineComponent) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *VirtualMachineComponent) GetSource() SourceType {
	if x != nil {
		return x.Source
	}
	return SourceType_OS
}

func (x *VirtualMachineComponent) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *VirtualMachineComponent) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

var File_internalapi_sensor_virtual_machine_proto protoreflect.FileDescriptor

const file_internalapi_sensor_virtual_machine_proto_rawDesc = "" +
	"\n" +
	"(internalapi/sensor/virtual_machine.proto\x12\x06sensor\"\xc8\x02\n" +
	"\x0eVirtualMachine\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x05 \x01(\tR\vclusterName\x127\n" +
	"\x05facts\x18\x06 \x03(\v2!.sensor.VirtualMachine.FactsEntryR\x05facts\x12?\n" +
	"\n" +
	"components\x18\a \x03(\v2\x1f.sensor.VirtualMachineComponentR\n" +
	"components\x1a8\n" +
	"\n" +
	"FactsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"C\n" +
	"\aLicense\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\"\xde\x01\n" +
	"\x17VirtualMachineComponent\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12)\n" +
	"\alicense\x18\x03 \x01(\v2\x0f.sensor.LicenseR\alicense\x12*\n" +
	"\x06source\x18\x04 \x01(\x0e2\x12.sensor.SourceTypeR\x06source\x12\x1a\n" +
	"\blocation\x18\x05 \x01(\tR\blocation\x12\"\n" +
	"\farchitecture\x18\x06 \x01(\tR\farchitecture*s\n" +
	"\n" +
	"SourceType\x12\x06\n" +
	"\x02OS\x10\x00\x12\n" +
	"\n" +
	"\x06PYTHON\x10\x01\x12\b\n" +
	"\x04JAVA\x10\x02\x12\b\n" +
	"\x04RUBY\x10\x03\x12\n" +
	"\n" +
	"\x06NODEJS\x10\x04\x12\x06\n" +
	"\x02GO\x10\a\x12\x15\n" +
	"\x11DOTNETCORERUNTIME\x10\x05\x12\x12\n" +
	"\x0eINFRASTRUCTURE\x10\x06B\x1dZ\x1b./internalapi/sensor;sensorb\x06proto3"

var (
	file_internalapi_sensor_virtual_machine_proto_rawDescOnce sync.Once
	file_internalapi_sensor_virtual_machine_proto_rawDescData []byte
)

func file_internalapi_sensor_virtual_machine_proto_rawDescGZIP() []byte {
	file_internalapi_sensor_virtual_machine_proto_rawDescOnce.Do(func() {
		file_internalapi_sensor_virtual_machine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internalapi_sensor_virtual_machine_proto_rawDesc), len(file_internalapi_sensor_virtual_machine_proto_rawDesc)))
	})
	return file_internalapi_sensor_virtual_machine_proto_rawDescData
}

var file_internalapi_sensor_virtual_machine_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internalapi_sensor_virtual_machine_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_internalapi_sensor_virtual_machine_proto_goTypes = []any{
	(SourceType)(0),                 // 0: sensor.SourceType
	(*VirtualMachine)(nil),          // 1: sensor.VirtualMachine
	(*License)(nil),                 // 2: sensor.License
	(*VirtualMachineComponent)(nil), // 3: sensor.VirtualMachineComponent
	nil,                             // 4: sensor.VirtualMachine.FactsEntry
}
var file_internalapi_sensor_virtual_machine_proto_depIdxs = []int32{
	4, // 0: sensor.VirtualMachine.facts:type_name -> sensor.VirtualMachine.FactsEntry
	3, // 1: sensor.VirtualMachine.components:type_name -> sensor.VirtualMachineComponent
	2, // 2: sensor.VirtualMachineComponent.license:type_name -> sensor.License
	0, // 3: sensor.VirtualMachineComponent.source:type_name -> sensor.SourceType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internalapi_sensor_virtual_machine_proto_init() }
func file_internalapi_sensor_virtual_machine_proto_init() {
	if File_internalapi_sensor_virtual_machine_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internalapi_sensor_virtual_machine_proto_rawDesc), len(file_internalapi_sensor_virtual_machine_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internalapi_sensor_virtual_machine_proto_goTypes,
		DependencyIndexes: file_internalapi_sensor_virtual_machine_proto_depIdxs,
		EnumInfos:         file_internalapi_sensor_virtual_machine_proto_enumTypes,
		MessageInfos:      file_internalapi_sensor_virtual_machine_proto_msgTypes,
	}.Build()
	File_internalapi_sensor_virtual_machine_proto = out.File
	file_internalapi_sensor_virtual_machine_proto_goTypes = nil
	file_internalapi_sensor_virtual_machine_proto_depIdxs = nil
}
